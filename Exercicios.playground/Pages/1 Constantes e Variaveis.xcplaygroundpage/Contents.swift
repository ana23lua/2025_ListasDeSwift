import UIKit


/*:
 # Lista 1: Constantes e Vari√°veis
 ### 1. Escreva um algoritmo que leia um valor e escreva o seu antecessor e sucessor. [üêù]

    func antecessorESucessor(...) {}
 */
// c√≥digo aqui
//print("oi")
//
//var a: Int = 10
//var sucessor = a+1
//var antecessor = a-1

//print(antecessor, sucessor)

func antecessorESucessor(valor: Int){
    var sucessor = valor+1
    var antecessor = valor-1
    
    print (antecessor, sucessor)
}
antecessorESucessor(valor: 3)
/*:
 ### 2. Um aplicativo mostra uma mensagem de boas vindas ao usu√°rio, "Ol√°, Fulano!", na sua tela inicial. Dado o nome do usu√°rio, escreva um algoritmo que monte a mensagem de boas vindas a ser exibida. [üêù]
    
    func printaMensagem(...) {}
 */
// c√≥digo aqui

func printaMensagem(nome: String, mensagem: String) -> String {
    let fulano = mensagem + nome
    return fulano
    
}
var resultado = printaMensagem(nome: "julia", mensagem: "teste")

print(printaMensagem(nome: "teste2", mensagem: "teste"))
/*:
 ### 3. Crie um programa que permita fazer a convers√£o cambial entre Reais e D√≥lares. Leia o valor em Reais e a taxa cambial. [üêù]
    func converteRealParaDolar(...) {}
 */
// c√≥digo aqui
func converteRealParaDolar(valorEmReais:Double) {
    let valorTaxaCambio = 5.63
    let valorEmReais = valorEmReais * valorTaxaCambio
    print (valorEmReais)
}

converteRealParaDolar(valorEmReais:5)
/*:
 ### 4. Fa√ßa um algoritmo que leia uma medida em metros e converta para cent√≠metros. [üêù]
    func converteMetrosParaCentimetros(...) {}
 */
// c√≥digo aqui
func converteMetrosParaCentimetros(metros: Double) {
    let centimetros = metros * 100
    print(centimetros)
}
converteMetrosParaCentimetros(metros: 5)
/*:
 ### 5. Ler uma temperatura em graus Fahrenheit e apresenta-la convertida em graus Celsius. [üêù]
 A f√≥rmula de convers√£o √© C = ( F ‚Äì 32 ) / 1.8, sendo F a temperatura em Fahrenheit e C a temperatura em Celsius.

    func converteFParaC(...) {}
 */
func converteFParaC(grausFahrenheit: Double) {
    let grausFahrenheit: Double = 1.8 + 32
    let grausCelsius = (grausFahrenheit - 32) / 1.8
    print(grausCelsius)
}
converteFParaC(grausFahrenheit: 5)

/*:
 ### 6. O custo de um carro novo ao consumidor √© a soma do custo de f√°brica com a porcentagem do distribuidor e dos impostos (aplicados ao custo de f√°brica). Supondo que o percentual do distribuidor seja de 28% e os impostos de 45%, escrever um algoritmo para ler o custo de f√°brica de um carro, calcular e escrever o custo final ao consumidor. [üêù]
    func custoAoConsumidor(...) {}
 */
// c√≥digo aqui
func custoAoConsumidor(custoFabrica: Double) {
    let custoDistribuidor = custoFabrica * 0.28
    let custoImpostos = custoFabrica * 0.45
    let custoFinal = custoFabrica + custoDistribuidor + custoImpostos
    print(custoFinal)
}
custoAoConsumidor(custoFabrica: 10000)
/*:
 ### 7. Calcular a quantidade dinheiro gasta por um fumante. Dados: o n√∫mero de anos que ele fuma, o n¬∫ de cigarros fumados por dia e o pre√ßo de uma carteira. (Considere que cada carteira tem 20 cigarros) [üêù]
    func dinheiroGasto(...) {}
 */
// c√≥digo aqui
func dinheiroGasto( anosFumando: Int,cigarrosPorDia: Int, precoCarteira: Int){
    var qtdCarteiras = 20/cigarrosPorDia
    let gastoTotal = anosFumando * cigarrosPorDia * precoCarteira * qtdCarteiras
    print(gastoTotal)

}
dinheiroGasto(anosFumando: 20, cigarrosPorDia: 5, precoCarteira: 15)
/*:
 ### 8. Fa√ßa um algoritmo que leia tr√™s notas de um aluno, calcule e escreva a m√©dia final deste aluno. [üêù]
    func mediaFinal(notas: ...) {}
 */
// c√≥digo aqui
func mediaFinal(prova1: Double, prova2: Double, prova3: Double) {
    let somaProvas = prova1 + prova2 + prova3
    let media = somaProvas/3
    print(media)
}
mediaFinal(prova1: 8, prova2: 7.5, prova3: 6.6)
/*:
 ### 9. A pontua√ß√£o de um jogo √© a quantia de pontos anteriores de um jogador, somada com os pontos ganhos na √∫ltima partida. Dado o nome do jogador, a quantia de pontos anteriores e os pontos da √∫ltima partida, escreva um algoritmo que mostre os pontos finais dessa pessoa no formato "Fulano: x pontos". [üêù]
    func printaPontuacao(...) {}
 */
// c√≥digo aqui
func printaPontuacao(nomeJogador: String, pontosAnteriores:Int, pontosUltima: Int){
    let pontuacao = pontosAnteriores + pontosUltima
    print("\(nomeJogador):\(pontuacao)")
}
printaPontuacao(nomeJogador: "Rosa", pontosAnteriores: 200, pontosUltima: 30)
/*:
 ### 10. Escreva um algoritmo para ler o sal√°rio mensal atual de um funcion√°rio e o percentual de reajuste. Calcular e escrever o valor do novo sal√°rio. [üêù]
    func reajusteSalarial(...) {}
 */
// c√≥digo aqui
func reajusteSalarial(salarioMensal: Double, percentualReajuste: Double){
    let novoSalario = salarioMensal * percentualReajuste
    print(novoSalario)
}
reajusteSalarial(salarioMensal: 2500, percentualReajuste: 1.2)
/*:
 ### 11. Uma revendedora de carros usados paga a seus funcion√°rios vendedores um sal√°rio fixo por m√™s, mais uma comiss√£o tamb√©m fixa para cada carro vendido e mais 5% do valor das vendas por ele efetuadas. Escrever um algoritmo que leia o n√∫mero de carros por ele vendidos, o valor total de suas vendas, o sal√°rio fixo e o valor que ele recebe por carro vendido. Calcule e escreva o sal√°rio final do vendedor. [üêù]
    func salarioDoVendedor(...) {}
 */
// c√≥digo aqui
func salarioDoVendedor(carrosVendidos:Int, valorVendas:Double, salarioFixo:Double, valorCarroVendido:Double){
    let salarioFinal = salarioFixo + (0.5 * valorCarroVendido) + (0.5 * valorVendas)
    print(salarioFinal)
}
salarioDoVendedor(carrosVendidos: 5, valorVendas: 1000, salarioFixo: 1800, valorCarroVendido: 80000)
/*:
 ### 12. Escreva um algoritmo para ler o n√∫mero total de eleitores de um munic√≠pio, o n√∫mero de votos brancos, nulos e v√°lidos. Calcular e escrever o percentual que cada um representa em rela√ß√£o ao total de eleitores. [üêù]
    func percentualDeVotos(...) {}
 */
// c√≥digo aqui
func percentualDeVotos(totalEleitores:Int, votosBrancos:Int, votosNulos:Int, votosValidos:Int){
    var percentualBrancos = totalEleitores/votosBrancos
    var percentualNulos = totalEleitores/votosNulos
    var percentualValidos = totalEleitores/votosValidos
    print(percentualBrancos, percentualNulos, percentualValidos)
}
percentualDeVotos(totalEleitores: 100352, votosBrancos: 34, votosNulos: 89, votosValidos: 80321)
/*:
 ### 13. Fa√ßa um algoritmo que leia o raio de um c√≠rculo, calcule e mostre sua √°rea. [üêù]
    func areaDoCirculo(raio:...) {}
 */
// c√≥digo aqui
func areaDoCirculo(raio:){
    
}
/*:
 ### 14. Calcule quantos azulejos s√£o necess√°rios para cobrir uma parede. √â necess√°rio conhecer a altura e largura da parede e a altura e largura dos azulejos. [üêùüêù]
    func quantidadeDeAzulejos(_:, _:) {}
 */
// c√≥digo aqui

/*:
 ### 15. Fa√ßa um algoritmo que leia a dura√ß√£o em segundos de um evento (por exemplo, um jogo de futebol) e printe o equivalente em horas, minutos e segundos. [üêùüêù]
    func converteSegundos(...) {}
 */
// c√≥digo aqui

/*:
 ### 16. Repita o exerc√≠cio "M√©dia de notas" considerando que a m√©dia √© ponderada e que os pesos das notas s√£o 2, 3 e 5.
    func mediaFinalPonderada(...) {}
 */
// c√≥digo aqui

/*:
 ### 17. Dado duas vari√°veis A e B, troque o valor armazenado nas duas e mostre os valores finais nessas vari√°veis.
 Dica: use uma vari√°vel auxiliar.
 
    func trocaEPrinta(a:..., b:...) {}
 */
// c√≥digo aqui

/*:
 ### 18. Robson quer sacar um determinado valor em um caixa eletr√¥nico. Sabendo que o caixa disp√µe de notas de 1, 2, 5, 10, 20, 50 e 100 bolsoguedes, e que ele sempre d√° o menor n√∫mero poss√≠vel de c√©dulas, fa√ßa um algoritmo que retorne o n√∫mero de notas de cada valor que ser√£o fornecidas, dado o valor total a ser sacado. [üêùüêùüêù]
    func numeroDeNotas(...) {}
 */
// c√≥digo aqui

/*:
 ### 19. Usando APENAS operadores b√°sicos (isso √©, soma, subtra√ß√£o, multiplica√ß√£o, divis√£o, resto, etc) e sem la√ßos de repeti√ß√£o ou fun√ß√µes prontas de bibliotecas, determine se um n√∫mero de 5 d√≠gitos √© ou n√£o pal√≠ndromo. [üêùüêùüêùü§Ø]
 P.S: um n√∫mero √© pal√≠ndromo se ele √© igual a si mesmo, invertido (ou seja, lido de tr√°s pra frente). Exemplos: 1221 √© um pal√≠ndromo, 131 tamb√©m. Mas 1552 n√£o √© pal√≠ndromo.
    
    func isPalindrome(...) -> ... {}
 */
// c√≥digo aqui

/*:
 ### 20. Construa as fun√ß√µes que retornam os resultados para as opera√ß√µes entre A e B de cada uma das 3 tabelas. [üêùüêùüêùü§Ø]
 Dado:
 
 ![Tabela 1](L1_E20_T1.png)

 ![Tabela 2](L1_E20_T2.png)
 
 ![Tabela 3](L1_E20_T3.png)

 */
/*:
       func tabelaUm(a: Bool, b: Bool) -> Bool {
          //seu c√≥digo aqui
       }

       func tabelaDois(a: Bool, b: Bool) -> Bool {
          //seu c√≥digo aqui
       }

       func tabelaTres(a: Bool) -> Bool {
          //seu c√≥digo aqui
       }
 */
// c√≥digo aqui
